// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that provides optimized route suggestions for drivers, considering real-time traffic conditions.
 *
 * - optimizeRoute - A function that handles the route optimization process.
 * - OptimizeRouteInput - The input type for the optimizeRoute function.
 * - OptimizeRouteOutput - The return type for the optimizeRoute function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const OptimizeRouteInputSchema = z.object({
  pickupLocation: z
    .string()
    .describe('The starting location for the route.'),
  destination: z.string().describe('The destination location for the route.'),
  currentTrafficConditions: z
    .string()
    .describe('A description of the current traffic conditions.'),
});
export type OptimizeRouteInput = z.infer<typeof OptimizeRouteInputSchema>;

const OptimizeRouteOutputSchema = z.object({
  optimizedRoute: z.string().describe('The suggested optimized route.'),
  estimatedTravelTime: z
    .string()
    .describe('The estimated travel time for the optimized route.'),
  reasoning: z
    .string()
    .describe(
      'The reasoning behind the route optimization, considering traffic conditions.'
    ),
});
export type OptimizeRouteOutput = z.infer<typeof OptimizeRouteOutputSchema>;

export async function optimizeRoute(
  input: OptimizeRouteInput
): Promise<OptimizeRouteOutput> {
  return optimizeRouteFlow(input);
}

const prompt = ai.definePrompt({
  name: 'optimizeRoutePrompt',
  input: {schema: OptimizeRouteInputSchema},
  output: {schema: OptimizeRouteOutputSchema},
  prompt: `You are an expert route optimizer for drivers.

You will receive the pickup location, destination, and current traffic conditions.

Based on this information, you will suggest an optimized route, estimate the travel time, and explain your reasoning.

Pickup Location: {{{pickupLocation}}}
Destination: {{{destination}}}
Current Traffic Conditions: {{{currentTrafficConditions}}}

Optimize the route, estimate travel time, and explain your reasoning:
`,
});

const optimizeRouteFlow = ai.defineFlow(
  {
    name: 'optimizeRouteFlow',
    inputSchema: OptimizeRouteInputSchema,
    outputSchema: OptimizeRouteOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);

